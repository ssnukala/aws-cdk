## This stack will create ECS
stackName: ${CDK_PFIX}-${CDK_ENV}-ecs-stack
region: ${CDK_REGION}
accountId: ${CDK_ENV}.accountid
tags:
    cost.center: ${CDK_ENV}
    dept.name: ${CDK_ENV}
    org.name: ${CDK_ORG}

ecs:
    name: ${CDK_PFIX}-${CDK_ENV}-ecs-cluster
    vpc: ${CDK_PFIX}-${CDK_ENV}-vpc
    services:
        - name: ${CDK_PFIX}-${CDK_ENV}-web-service
          targetGroup: /${CDK_PFIX}/${CDK_ENV}/alb/tg/web
          subnetType: private
          securityGroups:
            - /${CDK_PFIX}/${CDK_ENV}/sg/app
          task:
            name: ${CDK_PFIX}-${CDK_ENV}-web-task
            cpu: 2048
            memory: 4096
            role: arn:aws:iam::${accountId}:role/${CDK_PFIX}-prod2-comp-role
            retentionDays: ONE_DAY
            containers:
              - name: app
                cpu: 0
                memory: 3072
                ecrRepoName: cmdfw.prod2.uf46msc-app
                tag: 1.0.9
                containerPort: -1
                hostPort: -1
                logGroup: /${CDK_PFIX}-${CDK_ENV}-ecs-app-service
                streamPrefix: ${CDK_PFIX}-${CDK_ENV}-app
                environment:
                  AWS_SECRET_KEY: cmdfw.prod2.01
                  HOST_SERVER: fargate
                  SKIP_PERMISSION_CHECK: true
                  UF_MODE: production
              - name: nginx
                cpu: 0
                memory: 1024
                ecrRepoName: cmdfw.prod2.uf46msc-nginx
                environment:
                  PHP_HOST: php-fpm
                tag: 1.0.9
                containerPort: 80
                hostPort: 80
                logGroup: /${CDK_PFIX}-${CDK_ENV}-ecs-nginx-service
                streamPrefix: ${CDK_PFIX}-${CDK_ENV}-nginx
            autoScaling:
              memUtilizationPercent: 75
              cpuUtilizationPercent: 75
              minCapacity: 1
              maxCapacity: 3